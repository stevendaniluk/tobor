<!-- 
  Simple Stage simulation for testing
  
-->
<launch>
  
  <!-- Map settings -->
  <arg name="map_name"       default="utias.yaml"/>
  <arg name="world_name"     default="utias.world"/>
  
  <arg name="initial_pose_x" default="2.0"/>
  <arg name="initial_pose_y" default="2.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <param name="/use_sim_time" value="true"/>
  
  <!-- Turtlebot settings -->
  <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>
  <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>
  <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>
  
  <!--  ******************** Stage ********************  -->
  <!-- 
        Publishes transforms:
          /base_link -> /base_laser
          /base_footprint -> /base_link (identity)
          /odom -> base_footprint
        Publishes topics:
          /odom : odometry data from the simulated odometry
          /base_scan : laser data from the simulated laser
          /base_pose_ground_truth : the ground truth pose
        Parameters:
          base_watchdog_timeout: time after receiving the last cmd_vel before stopping
        Args:
          -g : run in headless mode.
  --> 
  <node 
    pkg="stage_ros" 
    type="stageros" 
    name="stageros"
    args="$(find tobor)/stage/worlds/$(arg world_name)">
    <!--
    args="-g $(find tobor)/stage/worlds/$(arg world_name)">
    -->
      <param name="base_watchdog_timeout" value="0.5"/>
      <remap from="odom" to="odom"/>
      <remap from="base_pose_ground_truth" to="base_pose_ground_truth"/>
      <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
      <remap from="base_scan" to="scan"/>
  </node>

  <!--  ******************** Robot Model ********************  -->

  <!-- Load URDF file -->
  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>
  
  <!-- Start joint publisher -->
  <node 
    name="joint_state_publisher" 
    pkg="joint_state_publisher" 
    type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>

  <!-- Start nodelet manager -->
  <node 
    pkg="nodelet" 
    type="nodelet" 
    name="mobile_base_nodelet_manager" 
    args="manager"
  />
  
  <!-- Velocity commands multiplexer (required for teleop) -->
  <node 
    pkg="nodelet" 
    type="nodelet" 
    name="cmd_vel_mux" 
    args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param 
      name="yaml_cfg_file" 
      value="$(find tobor)/param/mux.yaml"
    />
    <remap 
      from="cmd_vel_mux/output" 
      to="mobile_base/commands/velocity"
    />
  </node> <!-- end cmd_vel_mux -->


  <!--  ************** Navigation  ***************  -->
  
  <include file="$(find tobor)/launch/includes/move_base.launch.xml"/>
  
  <!-- Map server -->
  <node 
    name="map_server" 
    pkg="map_server" 
    type="map_server" 
    args="$(find tobor)/maps/$(arg map_name)">
    <param name="frame_id" value="/map"/>
  </node>
  
  <!-- AMCL -->
  <!--
  <include file="$(find tobor)/launch/includes/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>
  -->
  
</launch>

